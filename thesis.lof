\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Layouts of the baseline policy with/without deduplication (the data and parity chunks are represented in white and gray colors, respectively).\relax }}{11}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Files to be written}}}{11}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Without deduplicateslication}}}{11}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {With deduplication}}}{11}
\contentsline {figure}{\numberline {3.2}{\ignorespaces \relax \fontsize {17.28}{22}\selectfont Illustration of the EDP algorithm for two files, where $N = 3$, $C = 2$, $(n,k) = (3,2)$. \relax }}{22}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Example of files: assuming $( d_{1,1}, d_{1,2}, d_{1,3}) = (2,0,1)$ and $(d_{2,1}, d_{2,2}, d_{2,3}) = (1,1,0)$. }}}{22}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces { Greedy placement of File\nobreakspace {}1: $(u_{1,1}, u_{1,2}, u_{1,3}) = (0,2,2)$; $(d_{2,1}, d_{2,2}, d_{2,3}) = (1,2,1)$. }}}{22}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces { Greedy placement of File 2. $(u_{2,1}, u_{2,2}, u_{2,3})=(2,0,0)$. }}}{22}
\contentsline {subfigure}{\numberline {(d)}{\ignorespaces { Swapping E and D. }}}{22}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Architectural overview of our prototype.\relax }}{25}
\contentsline {figure}{\numberline {3.4}{\ignorespaces Cumulative distributions of files versus performance gaps for the baseline and EDP algorithms.\relax }}{29}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {FSLHOME}}}{29}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {LINUX }}}{29}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {LINUXTAR }}}{29}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Comparisons on read balance and degraded read balance between the baseline and EDP algorithms. \relax }}{31}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces { Read balance (FSLHOME) }}}{31}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces { Degraded read balance (FSLHOME) }}}{31}
\contentsline {figure}{\numberline {3.7}{\ignorespaces Average normalized read latency for files of LINUX.\relax }}{35}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces { Homogeneous, fixed-size chunking }}}{35}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces { Homogeneous, variable-size chunking }}}{35}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces { Heterogeneous, fixed-size chunking }}}{35}
\contentsline {subfigure}{\numberline {(d)}{\ignorespaces { Heterogeneous, variable-size chunking }}}{35}
\contentsline {figure}{\numberline {3.8}{\ignorespaces Read latency distributions of Linux 3.16.3 and LINUXTAR (the files in the x-axis are sorted by the order that they are written to the prototype).\relax }}{36}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces { Homogeneous, LINUX 3.16.3}}}{36}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces { Heterogeneous, LINUX 3.16.3}}}{36}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces { Heterogeneous, LINUXTAR }}}{36}
\contentsline {figure}{\numberline {3.9}{\ignorespaces Batch processing time of the baseline and EDP with various numbers of files in a batch.\relax }}{39}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Read latency improvements of EDP and CEDP over baseline.\relax }}{40}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces { FSLHOME }}}{40}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces { LINUX }}}{40}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces { LINUXTAR }}}{40}
\addvspace {10\p@ }
